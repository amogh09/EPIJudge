HC = ghc 
OPTFLAG = -O2
BUILD_DIR = build
BUILD_CMD = ${HC} ${OPTFLAG} -outputdir ${BUILD_DIR} 

RECTANGLE_INTERSECTION = rectangleIntersection
COUNT_BITS = countBits
PARITY = parity
SWAP_BITS = swapBits
REVERSE_BITS = reverseBits
CLOSEST_INT_SAME_WEIGHT = closestIntSameWeight
PRIMITIVE_MULTIPLY = primitiveMultiply
PRIMITIVE_DIVIDE = primitiveDivide
POWER_X_Y = powerXY
REVERSE_DIGITS = reverseDigits
IS_NUMBER_PALINDROMIC = isNumberPalindromic
UNIFORM_RANDOM_NUMBER = uniformRandomNumber
EVEN_ODD_ARRAY = evenOddArray
DUTCH_NATIONAL_FLAG = dutchNationalFlag
INT_AS_ARRAY_INCREMENT = intAsArrayIncrement
INT_AS_ARRAY_MULTIPLY = intAsArrayMultiply
ADVANCE_BY_OFFSETS = advanceByOffsets
SORTED_ARRAY_REMOVE_DUPS = sortedArrayRemoveDups
BUY_AND_SELL_STOCK = buyAndSellStock
BUY_AND_SELL_STOCK_TWICE = buyAndSellStockTwice
ALTERNATING_ARRAY = alternatingArray
PRIME_SIEVE = primeSieve
APPLY_PERMUTATION = applyPermutation
NEXT_PERMUTATION = nextPermutation
OFFLINE_SAMPLING = offlineSampling
ONLINE_SAMPLING = onlineSampling
RANDOM_PERMUTATION = randomPermutation
RANDOM_SUBSET = randomSubset
NONUNIFORM_RANDOM_NUMBER = nonUniformRandomNumber
IS_VALID_SUDOKU = isValidSudoku
SPIRAL_ORDERING_SEGMENTS = spiralOrderingSegments

.PHONY: ${COUNT_BITS}
${BUILD_DIR}/${COUNT_BITS}: ${BUILD_DIR} ${COUNT_BITS}.hs
	@echo "Compiling ${COUNT_BITS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${COUNT_BITS} ${COUNT_BITS}.hs
${COUNT_BITS}: ${BUILD_DIR}/${COUNT_BITS}
	@echo "Running ${COUNT_BITS}"
	${BUILD_DIR}/${COUNT_BITS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o	

.PHONY: ${PARITY}
${BUILD_DIR}/${PARITY}: ${BUILD_DIR} ${PARITY}.hs
	@echo "Compiling ${PARITY}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${PARITY} ${PARITY}.hs
${PARITY}: ${BUILD_DIR}/${PARITY}
	@echo "Running ${PARITY}"
	${BUILD_DIR}/${PARITY}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${SWAP_BITS}
${BUILD_DIR}/${SWAP_BITS}: ${BUILD_DIR} ${SWAP_BITS}.hs
	@echo "Compiling ${SWAP_BITS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${SWAP_BITS} ${SWAP_BITS}.hs
${SWAP_BITS}: ${BUILD_DIR}/${SWAP_BITS}
	@echo "Running ${SWAP_BITS}"
	${BUILD_DIR}/${SWAP_BITS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${REVERSE_BITS}
${BUILD_DIR}/${REVERSE_BITS}: ${BUILD_DIR} ${REVERSE_BITS}.hs
	@echo "Compiling ${REVERSE_BITS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${REVERSE_BITS} ${REVERSE_BITS}.hs
${REVERSE_BITS}: ${BUILD_DIR}/${REVERSE_BITS}
	@echo "Running ${REVERSE_BITS}"
	${BUILD_DIR}/${REVERSE_BITS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${CLOSEST_INT_SAME_WEIGHT}
${BUILD_DIR}/${CLOSEST_INT_SAME_WEIGHT}: ${BUILD_DIR} ${CLOSEST_INT_SAME_WEIGHT}.hs
	@echo "Compiling ${CLOSEST_INT_SAME_WEIGHT}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${CLOSEST_INT_SAME_WEIGHT} ${CLOSEST_INT_SAME_WEIGHT}.hs
${CLOSEST_INT_SAME_WEIGHT}: ${BUILD_DIR}/${CLOSEST_INT_SAME_WEIGHT}
	@echo "Running ${CLOSEST_INT_SAME_WEIGHT}"
	${BUILD_DIR}/${CLOSEST_INT_SAME_WEIGHT}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${PRIMITIVE_MULTIPLY}
${BUILD_DIR}/${PRIMITIVE_MULTIPLY}: ${BUILD_DIR} ${PRIMITIVE_MULTIPLY}.hs
	@echo "Compiling ${PRIMITIVE_MULTIPLY}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${PRIMITIVE_MULTIPLY} ${PRIMITIVE_MULTIPLY}.hs
${PRIMITIVE_MULTIPLY}: ${BUILD_DIR}/${PRIMITIVE_MULTIPLY}
	@echo "Running ${PRIMITIVE_MULTIPLY}"
	${BUILD_DIR}/${PRIMITIVE_MULTIPLY}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${PRIMITIVE_DIVIDE}
${BUILD_DIR}/${PRIMITIVE_DIVIDE}: ${BUILD_DIR} ${PRIMITIVE_DIVIDE}.hs
	@echo "Compiling ${PRIMITIVE_DIVIDE}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${PRIMITIVE_DIVIDE} ${PRIMITIVE_DIVIDE}.hs
${PRIMITIVE_DIVIDE}: ${BUILD_DIR}/${PRIMITIVE_DIVIDE}
	@echo "Running ${PRIMITIVE_DIVIDE}"
	${BUILD_DIR}/${PRIMITIVE_DIVIDE}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${POWER_X_Y}
${BUILD_DIR}/${POWER_X_Y}: ${BUILD_DIR} ${POWER_X_Y}.hs
	@echo "Compiling ${POWER_X_Y}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${POWER_X_Y} ${POWER_X_Y}.hs
${POWER_X_Y}: ${BUILD_DIR}/${POWER_X_Y}
	@echo "Running ${POWER_X_Y}"
	${BUILD_DIR}/${POWER_X_Y}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${REVERSE_DIGITS}
${BUILD_DIR}/${REVERSE_DIGITS}: ${BUILD_DIR} ${REVERSE_DIGITS}.hs
	@echo "Compiling ${REVERSE_DIGITS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${REVERSE_DIGITS} ${REVERSE_DIGITS}.hs
${REVERSE_DIGITS}: ${BUILD_DIR}/${REVERSE_DIGITS}
	@echo "Running ${REVERSE_DIGITS}"
	${BUILD_DIR}/${REVERSE_DIGITS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${IS_NUMBER_PALINDROMIC}
${BUILD_DIR}/${IS_NUMBER_PALINDROMIC}: ${BUILD_DIR} ${IS_NUMBER_PALINDROMIC}.hs
	@echo "Compiling ${IS_NUMBER_PALINDROMIC}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${IS_NUMBER_PALINDROMIC} ${IS_NUMBER_PALINDROMIC}.hs
${IS_NUMBER_PALINDROMIC}: ${BUILD_DIR}/${IS_NUMBER_PALINDROMIC}
	@echo "Running ${IS_NUMBER_PALINDROMIC}"
	${BUILD_DIR}/${IS_NUMBER_PALINDROMIC}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${UNIFORM_RANDOM_NUMBER}
${BUILD_DIR}/${UNIFORM_RANDOM_NUMBER}: ${BUILD_DIR} ${UNIFORM_RANDOM_NUMBER}.hs
	@echo "Compiling ${UNIFORM_RANDOM_NUMBER}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${UNIFORM_RANDOM_NUMBER} ${UNIFORM_RANDOM_NUMBER}.hs
${UNIFORM_RANDOM_NUMBER}: ${BUILD_DIR}/${UNIFORM_RANDOM_NUMBER}
	@echo "Running ${UNIFORM_RANDOM_NUMBER}"
	${BUILD_DIR}/${UNIFORM_RANDOM_NUMBER}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${RECTANGLE_INTERSECTION}
${BUILD_DIR}/${RECTANGLE_INTERSECTION}: ${BUILD_DIR} ${RECTANGLE_INTERSECTION}.hs
	@echo "Compiling ${RECTANGLE_INTERSECTION}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${RECTANGLE_INTERSECTION} ${RECTANGLE_INTERSECTION}.hs
${RECTANGLE_INTERSECTION}: ${BUILD_DIR}/${RECTANGLE_INTERSECTION}
	@echo "Running ${RECTANGLE_INTERSECTION}"
	${BUILD_DIR}/${RECTANGLE_INTERSECTION}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${EVEN_ODD_ARRAY}
${BUILD_DIR}/${EVEN_ODD_ARRAY}: ${BUILD_DIR} ${EVEN_ODD_ARRAY}.hs
	@echo "Compiling ${EVEN_ODD_ARRAY}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${EVEN_ODD_ARRAY} ${EVEN_ODD_ARRAY}.hs
${EVEN_ODD_ARRAY}: ${BUILD_DIR}/${EVEN_ODD_ARRAY}
	@echo "Running ${EVEN_ODD_ARRAY}"
	${BUILD_DIR}/${EVEN_ODD_ARRAY}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${DUTCH_NATIONAL_FLAG}
${BUILD_DIR}/${DUTCH_NATIONAL_FLAG}: ${BUILD_DIR} ${DUTCH_NATIONAL_FLAG}.hs
	@echo "Compiling ${DUTCH_NATIONAL_FLAG}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${DUTCH_NATIONAL_FLAG} ${DUTCH_NATIONAL_FLAG}.hs
${DUTCH_NATIONAL_FLAG}: ${BUILD_DIR}/${DUTCH_NATIONAL_FLAG}
	@echo "Running ${DUTCH_NATIONAL_FLAG}"
	${BUILD_DIR}/${DUTCH_NATIONAL_FLAG}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${INT_AS_ARRAY_INCREMENT}
${BUILD_DIR}/${INT_AS_ARRAY_INCREMENT}: ${BUILD_DIR} ${INT_AS_ARRAY_INCREMENT}.hs
	@echo "Compiling ${INT_AS_ARRAY_INCREMENT}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${INT_AS_ARRAY_INCREMENT} ${INT_AS_ARRAY_INCREMENT}.hs
${INT_AS_ARRAY_INCREMENT}: ${BUILD_DIR}/${INT_AS_ARRAY_INCREMENT}
	@echo "Running ${INT_AS_ARRAY_INCREMENT}"
	${BUILD_DIR}/${INT_AS_ARRAY_INCREMENT}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${INT_AS_ARRAY_MULTIPLY}
${BUILD_DIR}/${INT_AS_ARRAY_MULTIPLY}: ${BUILD_DIR} ${INT_AS_ARRAY_MULTIPLY}.hs
	@echo "Compiling ${INT_AS_ARRAY_MULTIPLY}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${INT_AS_ARRAY_MULTIPLY} ${INT_AS_ARRAY_MULTIPLY}.hs
${INT_AS_ARRAY_MULTIPLY}: ${BUILD_DIR}/${INT_AS_ARRAY_MULTIPLY}
	@echo "Running ${INT_AS_ARRAY_MULTIPLY}"
	${BUILD_DIR}/${INT_AS_ARRAY_MULTIPLY}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${ADVANCE_BY_OFFSETS}
${BUILD_DIR}/${ADVANCE_BY_OFFSETS}: ${BUILD_DIR} ${ADVANCE_BY_OFFSETS}.hs
	@echo "Compiling ${ADVANCE_BY_OFFSETS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${ADVANCE_BY_OFFSETS} ${ADVANCE_BY_OFFSETS}.hs
${ADVANCE_BY_OFFSETS}: ${BUILD_DIR}/${ADVANCE_BY_OFFSETS}
	@echo "Running ${ADVANCE_BY_OFFSETS}"
	${BUILD_DIR}/${ADVANCE_BY_OFFSETS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${SORTED_ARRAY_REMOVE_DUPS}
${BUILD_DIR}/${SORTED_ARRAY_REMOVE_DUPS}: ${BUILD_DIR} ${SORTED_ARRAY_REMOVE_DUPS}.hs
	@echo "Compiling ${SORTED_ARRAY_REMOVE_DUPS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${SORTED_ARRAY_REMOVE_DUPS} ${SORTED_ARRAY_REMOVE_DUPS}.hs
${SORTED_ARRAY_REMOVE_DUPS}: ${BUILD_DIR}/${SORTED_ARRAY_REMOVE_DUPS}
	@echo "Running ${SORTED_ARRAY_REMOVE_DUPS}"
	${BUILD_DIR}/${SORTED_ARRAY_REMOVE_DUPS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${BUY_AND_SELL_STOCK}
${BUILD_DIR}/${BUY_AND_SELL_STOCK}: ${BUILD_DIR} ${BUY_AND_SELL_STOCK}.hs
	@echo "Compiling ${BUY_AND_SELL_STOCK}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${BUY_AND_SELL_STOCK} ${BUY_AND_SELL_STOCK}.hs
${BUY_AND_SELL_STOCK}: ${BUILD_DIR}/${BUY_AND_SELL_STOCK}
	@echo "Running ${BUY_AND_SELL_STOCK}"
	${BUILD_DIR}/${BUY_AND_SELL_STOCK}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${BUY_AND_SELL_STOCK_TWICE}
${BUILD_DIR}/${BUY_AND_SELL_STOCK_TWICE}: ${BUILD_DIR} ${BUY_AND_SELL_STOCK_TWICE}.hs
	@echo "Compiling ${BUY_AND_SELL_STOCK_TWICE}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${BUY_AND_SELL_STOCK_TWICE} ${BUY_AND_SELL_STOCK_TWICE}.hs
${BUY_AND_SELL_STOCK_TWICE}: ${BUILD_DIR}/${BUY_AND_SELL_STOCK_TWICE}
	@echo "Running ${BUY_AND_SELL_STOCK_TWICE}"
	${BUILD_DIR}/${BUY_AND_SELL_STOCK_TWICE}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${ALTERNATING_ARRAY}
${BUILD_DIR}/${ALTERNATING_ARRAY}: ${BUILD_DIR} ${ALTERNATING_ARRAY}.hs
	@echo "Compiling ${ALTERNATING_ARRAY}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${ALTERNATING_ARRAY} ${ALTERNATING_ARRAY}.hs
${ALTERNATING_ARRAY}: ${BUILD_DIR}/${ALTERNATING_ARRAY}
	@echo "Running ${ALTERNATING_ARRAY}"
	${BUILD_DIR}/${ALTERNATING_ARRAY}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${PRIME_SIEVE}
${BUILD_DIR}/${PRIME_SIEVE}: ${BUILD_DIR} ${PRIME_SIEVE}.hs
	@echo "Compiling ${PRIME_SIEVE}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${PRIME_SIEVE} ${PRIME_SIEVE}.hs
${PRIME_SIEVE}: ${BUILD_DIR}/${PRIME_SIEVE}
	@echo "Running ${PRIME_SIEVE}"
	${BUILD_DIR}/${PRIME_SIEVE}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${APPLY_PERMUTATION}
${BUILD_DIR}/${APPLY_PERMUTATION}: ${BUILD_DIR} ${APPLY_PERMUTATION}.hs
	@echo "Compiling ${APPLY_PERMUTATION}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${APPLY_PERMUTATION} ${APPLY_PERMUTATION}.hs
${APPLY_PERMUTATION}: ${BUILD_DIR}/${APPLY_PERMUTATION}
	@echo "Running ${APPLY_PERMUTATION}"
	${BUILD_DIR}/${APPLY_PERMUTATION}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${NEXT_PERMUTATION}
${BUILD_DIR}/${NEXT_PERMUTATION}: ${BUILD_DIR} ${NEXT_PERMUTATION}.hs
	@echo "Compiling ${NEXT_PERMUTATION}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${NEXT_PERMUTATION} ${NEXT_PERMUTATION}.hs
${NEXT_PERMUTATION}: ${BUILD_DIR}/${NEXT_PERMUTATION}
	@echo "Running ${NEXT_PERMUTATION}"
	${BUILD_DIR}/${NEXT_PERMUTATION}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${OFFLINE_SAMPLING}
${BUILD_DIR}/${OFFLINE_SAMPLING}: ${BUILD_DIR} ${OFFLINE_SAMPLING}.hs
	@echo "Compiling ${OFFLINE_SAMPLING}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${OFFLINE_SAMPLING} ${OFFLINE_SAMPLING}.hs
${OFFLINE_SAMPLING}: ${BUILD_DIR}/${OFFLINE_SAMPLING}
	@echo "Running ${OFFLINE_SAMPLING}"
	${BUILD_DIR}/${OFFLINE_SAMPLING}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${ONLINE_SAMPLING}
${BUILD_DIR}/${ONLINE_SAMPLING}: ${BUILD_DIR} ${ONLINE_SAMPLING}.hs
	@echo "Compiling ${ONLINE_SAMPLING}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${ONLINE_SAMPLING} ${ONLINE_SAMPLING}.hs
${ONLINE_SAMPLING}: ${BUILD_DIR}/${ONLINE_SAMPLING}
	@echo "Running ${ONLINE_SAMPLING}"
	${BUILD_DIR}/${ONLINE_SAMPLING}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${RANDOM_PERMUTATION}
${BUILD_DIR}/${RANDOM_PERMUTATION}: ${BUILD_DIR} ${RANDOM_PERMUTATION}.hs
	@echo "Compiling ${RANDOM_PERMUTATION}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${RANDOM_PERMUTATION} ${RANDOM_PERMUTATION}.hs
${RANDOM_PERMUTATION}: ${BUILD_DIR}/${RANDOM_PERMUTATION}
	@echo "Running ${RANDOM_PERMUTATION}"
	${BUILD_DIR}/${RANDOM_PERMUTATION}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${RANDOM_SUBSET}
${BUILD_DIR}/${RANDOM_SUBSET}: ${BUILD_DIR} ${RANDOM_SUBSET}.hs
	@echo "Compiling ${RANDOM_SUBSET}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${RANDOM_SUBSET} ${RANDOM_SUBSET}.hs
${RANDOM_SUBSET}: ${BUILD_DIR}/${RANDOM_SUBSET}
	@echo "Running ${RANDOM_SUBSET}"
	${BUILD_DIR}/${RANDOM_SUBSET}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${NONUNIFORM_RANDOM_NUMBER}
${BUILD_DIR}/${NONUNIFORM_RANDOM_NUMBER}: ${BUILD_DIR} ${NONUNIFORM_RANDOM_NUMBER}.hs
	@echo "Compiling ${NONUNIFORM_RANDOM_NUMBER}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${NONUNIFORM_RANDOM_NUMBER} ${NONUNIFORM_RANDOM_NUMBER}.hs
${NONUNIFORM_RANDOM_NUMBER}: ${BUILD_DIR}/${NONUNIFORM_RANDOM_NUMBER}
	@echo "Running ${NONUNIFORM_RANDOM_NUMBER}"
	${BUILD_DIR}/${NONUNIFORM_RANDOM_NUMBER}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${IS_VALID_SUDOKU}
${BUILD_DIR}/${IS_VALID_SUDOKU}: ${BUILD_DIR} ${IS_VALID_SUDOKU}.hs
	@echo "Compiling ${IS_VALID_SUDOKU}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${IS_VALID_SUDOKU} ${IS_VALID_SUDOKU}.hs
${IS_VALID_SUDOKU}: ${BUILD_DIR}/${IS_VALID_SUDOKU}
	@echo "Running ${IS_VALID_SUDOKU}"
	${BUILD_DIR}/${IS_VALID_SUDOKU}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

.PHONY: ${SPIRAL_ORDERING_SEGMENTS}
${BUILD_DIR}/${SPIRAL_ORDERING_SEGMENTS}: ${BUILD_DIR} ${SPIRAL_ORDERING_SEGMENTS}.hs
	@echo "Compiling ${SPIRAL_ORDERING_SEGMENTS}.hs"
	${BUILD_CMD} -o ${BUILD_DIR}/${SPIRAL_ORDERING_SEGMENTS} ${SPIRAL_ORDERING_SEGMENTS}.hs
${SPIRAL_ORDERING_SEGMENTS}: ${BUILD_DIR}/${SPIRAL_ORDERING_SEGMENTS}
	@echo "Running ${SPIRAL_ORDERING_SEGMENTS}"
	${BUILD_DIR}/${SPIRAL_ORDERING_SEGMENTS}
	@rm -f ${BUILD_DIR}/Main.hi ${BUILD_DIR}/Main.o

${BUILD_DIR}: 
	@echo "Creating build directory"
	mkdir -p ${BUILD_DIR}

.PHONY: all
all: \
	${COUNT_BITS} \
	${PARITY} \
	${SWAP_BITS} \
	${REVERSE_BITS} \
	${CLOSEST_INT_SAME_WEIGHT} \
	${PRIMITIVE_MULTIPLY} \
	${PRIMITIVE_DIVIDE} \
	${POWER_X_Y} \
	${REVERSE_DIGITS} \
	${IS_NUMBER_PALINDROMIC} \
	${UNIFORM_RANDOM_NUMBER} \
	${RECTAGLE_INTERSECTION} \
	${EVEN_ODD_ARRAY} \
	${DUTCH_NATIONAL_FLAG} \
	${INT_AS_ARRAY_INCREMENT} \
	${INT_AS_ARRAY_MULTIPLY} \
	${ADVANCE_BY_OFFSETS} \
	${SORTED_ARRAY_REMOVE_DUPS} \
	${BUY_AND_SELL_STOCK} \
	${BUY_AND_SELL_STOCK_TWICE} \
	${ALTERNATING_ARRAY} \
	${PRIME_SIEVE} \
	${APPLY_PERMUTATION} \
	${NEXT_PERMUTATION} \
	${OFFLINE_SAMPLING} \
	${ONLINE_SAMPLING} \
	${RANDOM_PERMUTATION} \
	${RANDOM_SUBSET} \
	${NONUNIFORM_RANDOM_NUMBER} \
	${IS_VALID_SUDOKU} \
	${SPIRAL_ORDERING_SEGMENTS}

.PHONY: clean 
clean:
	@echo "Cleaning up..."
	rm -rf ${BUILD_DIR}/